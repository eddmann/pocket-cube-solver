{"version":3,"sources":["constants.ts","App/App.module.scss","App/index.tsx","App/CameraControls.tsx","App/Actions.tsx","App/SolutionExplorer.tsx","Cube/Facelet.tsx","Cube/Cubie.tsx","Cube/rotation.ts","Cube/index.tsx","index.tsx"],"names":["CUBE_FACELET_COLOURS","W","O","G","R","Y","B","SOLVED_CUBE","CUBIE_POSITIONS","DLB","Vector3","DLF","ULB","ULF","DRB","DRF","URB","URF","CUBE_STATE_LOOKUP","module","exports","App","solver","cubeRef","useRef","useState","state","setState","solution","setSolution","solutionIdx","setSolutionIdx","isAutoPlay","setAutoPlay","useEffect","current","move","startState","endState","isActiveAnimation","rotate","then","length","reset","onStateChange","onRandom","rand_cube","onSolve","solve_cube","Promise","resolve","map","idx","apply_cube_moves","slice","error","reject","doSolve","catch","global","alert","onCreated","gl","toneMapping","NoToneMapping","className","styles","Canvas","camera","position","antialias","ref","onMoveSelection","onAutoPlay","extend","OrbitControls","CameraControls","useThree","controls","useFrame","update","args","domElement","enableDamping","dampingFactor","enableZoom","enableKeys","enablePan","minDistance","maxDistance","Actions","unknownColours","RegExp","Object","keys","join","size","type","value","match","onChange","e","target","toUpperCase","replace","onClick","SolutionExplorer","Solution","MoveActive","Move","checked","eps","Facelet","width","height","radius","axis","inverse","colour","meshRef","geometryRef","shape","useMemo","radius0","Shape","absarc","Math","PI","createShape","rotX","rotY","calcPosition","React","useLayoutEffect","rotateX","rotateY","center","color","side","DoubleSide","polygonOffset","transparent","polygonOffsetFactor","polygonOffsetUnits","attach","RoundedBox","forwardRef","depth","smoothness","children","rest","params","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","curveSegments","geomRef","Cubie","name","yColour","xColour","zColour","userData","x","y","z","ROTATIONS","F","positions","L","U","D","animateRotation","cubies","animationSpeed","split","rotation","extra","direction","quarterTurns","cubiesToRotate","filter","cubie","includes","stepFactor","targetRotation","remaining","theta","forEach","applyAxisAngle","rotateOnAxis","Cube","cubiesRef","rotationRef","stateWithPadding","padEnd","doStep","onCompletion","undefined","copy","set","useImperativeHandle","cubieColours","chunk","reduce","faces","face","toCubieColours","entries","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72f2fa6a.chunk.js","sourcesContent":["import { Vector3 } from 'three';\n\nexport type CubeState = string;\n\nexport type CubeRotatation = 'F' | 'B' | 'R' | 'L' | 'U' | 'D';\n\nexport type CubePosition =\n  | 'DLB'\n  | 'DLF'\n  | 'ULB'\n  | 'ULF'\n  | 'DRB'\n  | 'DRF'\n  | 'URB'\n  | 'URF';\n\nexport const CUBE_FACELET_COLOURS = {\n  W: '#f7f5f5',\n  O: 'orange',\n  G: 'green',\n  R: 'red',\n  Y: 'yellow',\n  B: 'blue',\n};\n\nexport type CubeFaceletColour = keyof typeof CUBE_FACELET_COLOURS;\n\nexport type Move = string;\n\nexport type MoveTransition = {\n  move: Move;\n  startState: CubeState;\n  endState: CubeState;\n};\n\nexport type Solution = MoveTransition[];\n\nexport type Solver = typeof import('wasm-pocket-cube-solver');\n\nexport const SOLVED_CUBE = 'WWWWOOOOGGGGRRRRYYYYBBBB';\n\nexport const CUBIE_POSITIONS: {\n  [position in CubePosition]: Vector3;\n} = {\n  DLB: new Vector3(-0.5, -0.5, -0.5),\n  DLF: new Vector3(-0.5, -0.5, 0.5),\n  ULB: new Vector3(-0.5, 0.5, -0.5),\n  ULF: new Vector3(-0.5, 0.5, 0.5),\n  DRB: new Vector3(0.5, -0.5, -0.5),\n  DRF: new Vector3(0.5, -0.5, 0.5),\n  URB: new Vector3(0.5, 0.5, -0.5),\n  URF: new Vector3(0.5, 0.5, 0.5),\n};\n\n// prettier-ignore\nexport const CUBE_STATE_LOOKUP = [\n  7, 19, 22, 10, 6, 9, 3, 0, 11, 23, 17, 5,\n  21, 18, 12, 15, 4, 16, 13, 1, 20, 8, 2, 14\n];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Actions\":\"App_Actions__2k3r2\",\"Canvas\":\"App_Canvas__3gPKS\",\"Solution\":\"App_Solution__2FVnF\",\"Move\":\"App_Move__3i-Yo\",\"MoveActive\":\"App_MoveActive__wA1bn\"};","import React, { useState, useRef, useEffect } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport { NoToneMapping } from 'three';\nimport CameraControls from './CameraControls';\nimport Actions from './Actions';\nimport SolutionExplorer from './SolutionExplorer';\nimport Cube from '../Cube';\nimport styles from './App.module.scss';\nimport {\n  Solver,\n  CubeState,\n  Move,\n  MoveTransition,\n  Solution,\n  SOLVED_CUBE,\n} from '../constants';\n\ntype AppProps = {\n  solver: Solver;\n};\n\nconst doSolve = (\n  solver: Solver,\n  state: CubeState\n): Promise<Solution> => {\n  try {\n    const solution = solver.solve_cube(state);\n\n    return Promise.resolve([\n      ...solution.map(\n        (move: Move, idx): MoveTransition => ({\n          move,\n          startState: solver.apply_cube_moves(\n            state,\n            solution.slice(0, idx)\n          ),\n          endState: solver.apply_cube_moves(\n            state,\n            solution.slice(0, idx + 1)\n          ),\n        })\n      ),\n      {\n        move: '🎉',\n        startState: SOLVED_CUBE,\n        endState: SOLVED_CUBE,\n      },\n    ]);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst App = ({ solver }: AppProps) => {\n  const cubeRef = useRef<any>();\n  const [state, setState] = useState<CubeState>(SOLVED_CUBE);\n  const [solution, setSolution] = useState<Solution>([]);\n  const [solutionIdx, setSolutionIdx] = useState(0);\n  const [isAutoPlay, setAutoPlay] = useState(true);\n\n  useEffect(() => {\n    if (!cubeRef.current) return;\n    if (!solution[solutionIdx]) return;\n    if (!isAutoPlay) return;\n\n    const { move, startState, endState } = solution[solutionIdx];\n    if (startState === SOLVED_CUBE) return;\n\n    let isActiveAnimation = true;\n\n    cubeRef.current.rotate(move).then(() => {\n      if (!isActiveAnimation) {\n        cubeRef.current.reset();\n        return;\n      }\n\n      setState(endState);\n\n      if (solutionIdx + 1 < solution.length) {\n        setSolutionIdx(solutionIdx + 1);\n      }\n    });\n\n    return () => {\n      isActiveAnimation = false;\n    };\n  }, [solution, solutionIdx, isAutoPlay]);\n\n  const handleRandom = () => {\n    setState(solver.rand_cube());\n    setSolution([]);\n    setSolutionIdx(0);\n  };\n\n  const handleSolve = () => {\n    doSolve(solver, state)\n      .then(solution => {\n        setSolution(solution);\n        setSolutionIdx(0);\n        setAutoPlay(true);\n      })\n      .catch(error => {\n        global.alert(error);\n      });\n  };\n\n  const handleMoveSelection = (idx: number) => {\n    const { startState } = solution[idx];\n    setState(startState);\n    setSolutionIdx(idx);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>Pocket Cube Solver</h1>\n      </header>\n      <Actions\n        state={state}\n        onStateChange={setState}\n        onRandom={handleRandom}\n        onSolve={handleSolve}\n      />\n      <Canvas\n        onCreated={({ gl }) => {\n          gl.toneMapping = NoToneMapping;\n        }}\n        className={styles.Canvas}\n        camera={{ position: [4, 4, 5] }}\n        gl={{ antialias: true }}\n      >\n        <CameraControls />\n        <Cube ref={cubeRef} state={state} />\n      </Canvas>\n      <SolutionExplorer\n        solution={solution}\n        solutionIdx={solutionIdx}\n        isAutoPlay={isAutoPlay}\n        onMoveSelection={handleMoveSelection}\n        onAutoPlay={setAutoPlay}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useRef } from 'react';\nimport {\n  useFrame,\n  useThree,\n  extend,\n  ReactThreeFiber,\n} from '@react-three/fiber';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nextend({ OrbitControls });\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      orbitControls: ReactThreeFiber.Object3DNode<\n        OrbitControls,\n        typeof OrbitControls\n      >;\n    }\n  }\n}\n\nconst CameraControls = () => {\n  const { camera, gl } = useThree();\n\n  const controls = useRef<OrbitControls>();\n  useFrame(() => controls.current?.update());\n\n  return (\n    <orbitControls\n      ref={controls}\n      args={[camera, gl.domElement]}\n      enableDamping={true}\n      dampingFactor={0.25}\n      enableZoom={true}\n      enableKeys={false}\n      enablePan={false}\n      minDistance={4}\n      maxDistance={4}\n    />\n  );\n};\n\nexport default CameraControls;\n","import React from 'react';\nimport { CubeState, CUBE_FACELET_COLOURS } from '../constants';\nimport styles from './App.module.scss';\n\ntype ActionsProps = {\n  state: CubeState;\n  onStateChange: (state: CubeState) => void;\n  onRandom: () => void;\n  onSolve: () => void;\n};\n\nconst Actions = ({\n  state,\n  onStateChange,\n  onRandom,\n  onSolve,\n}: ActionsProps) => {\n  const unknownColours = new RegExp(\n    `[^${Object.keys(CUBE_FACELET_COLOURS).join('')}]`,\n    'g'\n  );\n\n  return (\n    <div className={styles.Actions}>\n      <input\n        size={40}\n        type=\"text\"\n        value={(state.match(/.{1,4}/g) || []).join(' ')}\n        onChange={e =>\n          onStateChange(\n            e.target.value.toUpperCase().replace(unknownColours, '')\n          )\n        }\n      />\n      <button onClick={onRandom}>Random</button>\n      <button onClick={onSolve}>Solve</button>\n    </div>\n  );\n};\n\nexport default Actions;\n","import React from 'react';\nimport styles from './App.module.scss';\nimport { Solution } from '../constants';\n\ntype SolutionExplorerProps = {\n  solution: Solution;\n  solutionIdx: number;\n  isAutoPlay: boolean;\n  onMoveSelection: (idx: number) => void;\n  onAutoPlay: (enabled: boolean) => void;\n};\n\nconst SolutionExplorer = ({\n  solution,\n  solutionIdx,\n  isAutoPlay,\n  onMoveSelection,\n  onAutoPlay,\n}: SolutionExplorerProps) => {\n  if (solution.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={styles.Solution}>\n      {solution.map(({ move }, idx) => (\n        <span\n          key={idx}\n          className={\n            solutionIdx === idx ? styles.MoveActive : styles.Move\n          }\n          onClick={() => onMoveSelection(idx)}\n        >\n          {move}\n        </span>\n      ))}\n      <label>\n        <input\n          type=\"checkbox\"\n          onChange={() => onAutoPlay(!isAutoPlay)}\n          checked={isAutoPlay}\n        />\n        Auto Play\n      </label>\n    </div>\n  );\n};\n\nexport default SolutionExplorer;\n","import React, { useMemo, useRef } from 'react';\nimport { Shape, DoubleSide, Vector3 } from 'three';\n\nconst eps = 0.00001;\n\nconst createShape = (\n  width: number,\n  height: number,\n  radius0: number\n): Shape => {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(\n    eps,\n    height - radius * 2,\n    eps,\n    Math.PI,\n    Math.PI / 2,\n    true\n  );\n  shape.absarc(\n    width - radius * 2,\n    height - radius * 2,\n    eps,\n    Math.PI / 2,\n    0,\n    true\n  );\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n\n  return shape;\n};\n\ntype FaceletAxis = 'x' | 'y' | 'z';\n\ntype FaceletProps = {\n  width?: number;\n  height?: number;\n  radius?: number;\n  axis: FaceletAxis;\n  colour: string;\n  inverse: boolean;\n};\n\nconst calcPosition = (\n  axis: FaceletAxis,\n  inverse: boolean\n): { rotX: number; rotY: number; position: Vector3 } => {\n  switch (axis) {\n    case 'y':\n      return {\n        rotX: 0,\n        rotY: (inverse ? -1 : 1) * (Math.PI / 2),\n        position: new Vector3(inverse ? -0.5 : 0.5, 0, 0),\n      };\n    case 'x':\n      return {\n        rotX: (inverse ? 1 : -1) * (Math.PI / 2),\n        rotY: 0,\n        position: new Vector3(0, inverse ? -0.5 : 0.5, 0),\n      };\n    case 'z':\n      return {\n        rotX: 0,\n        rotY: Math.PI,\n        position: new Vector3(0, 0, inverse ? -0.5 : 0.5),\n      };\n  }\n};\n\nconst Facelet = ({\n  width = 0.88,\n  height = 0.88,\n  radius = 0,\n  axis,\n  inverse,\n  colour,\n}: FaceletProps) => {\n  const meshRef = useRef<THREE.Mesh>();\n  const geometryRef = useRef<THREE.ShapeBufferGeometry>();\n\n  const shape = useMemo(() => createShape(width, height, radius), [\n    width,\n    height,\n    radius,\n  ]);\n  const { rotX, rotY, position } = calcPosition(axis, inverse);\n\n  React.useLayoutEffect(() => {\n    meshRef.current?.rotateX(rotX);\n    meshRef.current?.rotateY(rotY);\n    geometryRef.current?.center();\n  }, [rotY, rotX]);\n\n  return (\n    <mesh ref={meshRef} position={position}>\n      <meshBasicMaterial\n        color={colour}\n        side={DoubleSide}\n        polygonOffset\n        transparent\n        polygonOffsetFactor={-1}\n        polygonOffsetUnits={-4}\n      />\n      <shapeBufferGeometry\n        ref={geometryRef}\n        attach=\"geometry\"\n        args={[shape, 5]}\n      />\n    </mesh>\n  );\n};\n\nexport default Facelet;\n","import React, { forwardRef } from 'react';\nimport { Shape, ExtrudeBufferGeometry, Mesh, Vector3 } from 'three';\nimport Facelet from './Facelet';\nimport { CubePosition } from '../constants';\n\nconst eps = 0.00001;\n\nconst createShape = (\n  width: number,\n  height: number,\n  radius0: number\n) => {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(\n    eps,\n    height - radius * 2,\n    eps,\n    Math.PI,\n    Math.PI / 2,\n    true\n  );\n  shape.absarc(\n    width - radius * 2,\n    height - radius * 2,\n    eps,\n    Math.PI / 2,\n    0,\n    true\n  );\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n\n  return shape;\n};\n\ntype RoundBoxProps = {\n  args?: [width?: number, height?: number, depth?: number];\n  radius?: number;\n  smoothness?: number;\n} & Omit<JSX.IntrinsicElements['mesh'], 'args'>;\n\nconst RoundedBox = forwardRef<Mesh, RoundBoxProps>(\n  function RoundedBox(\n    {\n      args: [width = 1, height = 1, depth = 1] = [],\n      radius = 0.05,\n      smoothness = 4,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    const shape = React.useMemo(\n      () => createShape(width, height, radius),\n      [width, height, radius]\n    );\n    const params = React.useMemo(\n      () => ({\n        depth: depth - radius * 2,\n        bevelEnabled: true,\n        bevelSegments: smoothness * 2,\n        steps: 1,\n        bevelSize: radius - eps,\n        bevelThickness: radius,\n        curveSegments: smoothness,\n      }),\n      [depth, radius, smoothness]\n    );\n    const geomRef = React.useRef<ExtrudeBufferGeometry>();\n\n    React.useLayoutEffect(() => {\n      if (geomRef.current) {\n        geomRef.current.center();\n      }\n    }, [shape, params]);\n\n    return (\n      <mesh ref={ref} {...rest}>\n        <extrudeBufferGeometry\n          attach=\"geometry\"\n          ref={geomRef}\n          args={[shape, params]}\n        />\n        {children}\n      </mesh>\n    );\n  }\n);\n\ntype CubieProps = {\n  name: CubePosition;\n  position: Vector3;\n  yColour: string;\n  xColour: string;\n  zColour: string;\n};\n\nconst Cubie = forwardRef<Mesh, CubieProps>(\n  ({ name, position, yColour, xColour, zColour }, ref) => {\n    return (\n      <RoundedBox\n        ref={ref}\n        args={[1, 1, 1]}\n        radius={0.08}\n        smoothness={5}\n        position={position}\n        userData={{ name, position }}\n      >\n        <meshBasicMaterial color={0x000000} />\n        <Facelet axis=\"y\" inverse={position.x < 0} colour={yColour} />\n        <Facelet axis=\"x\" inverse={position.y < 0} colour={xColour} />\n        <Facelet axis=\"z\" inverse={position.z < 0} colour={zColour} />\n      </RoundedBox>\n    );\n  }\n);\n\nexport default Cubie;\n","import { Vector3 } from 'three';\nimport { CubePosition, CubeRotatation } from '../constants';\n\n// prettier-ignore\nconst ROTATIONS: { [rotation in CubeRotatation]: { positions: CubePosition[], axis: Vector3}} = {\n  F: { positions: ['ULF', 'URF', 'DLF', 'DRF'], axis: new Vector3(0, 0, 1) },\n  B: { positions: ['URB', 'ULB', 'DRB', 'DLB'], axis: new Vector3(0, 0, 1) },\n  R: { positions: ['URF', 'URB', 'DRF', 'DRB'], axis: new Vector3(1, 0, 0) },\n  L: { positions: ['ULB', 'ULF', 'DLB', 'DLF'], axis: new Vector3(1, 0, 0) },\n  U: { positions: ['ULB', 'URB', 'ULF', 'URF'], axis: new Vector3(0, 1, 0) },\n  D: { positions: ['DLF', 'DRF', 'DLB', 'DRB'], axis: new Vector3(0, 1, 0) },\n};\n\nexport type RotationAnimationStep = () => boolean;\n\nconst animateRotation = (\n  cubies: any[],\n  move: string,\n  animationSpeed: number\n): RotationAnimationStep => {\n  const [rotation, extra] = move.split('', 2) as [\n    CubeRotatation,\n    \"'\" | '2' | undefined\n  ];\n  const { positions, axis } = ROTATIONS[rotation];\n  const direction = extra === \"'\" ? 1 : -1;\n  const quarterTurns = extra === '2' ? 2 : 1;\n  const cubiesToRotate = cubies.filter(cubie =>\n    positions.includes(cubie.userData.name)\n  );\n  const stepFactor = 0.05 * quarterTurns * animationSpeed;\n  const targetRotation = (quarterTurns * Math.PI) / 2;\n  let remaining = targetRotation;\n\n  return () => {\n    if (remaining <= 0) {\n      return false;\n    }\n\n    const theta =\n      (1.1 -\n        ((2 * remaining - targetRotation) / targetRotation) ** 2) *\n      stepFactor;\n    remaining -= theta;\n\n    cubiesToRotate.forEach(cubie => {\n      cubie.position.applyAxisAngle(axis, theta * direction);\n      cubie.rotateOnAxis(axis, theta * direction);\n    });\n\n    return true;\n  };\n};\n\nexport default animateRotation;\n","import React, {\n  useRef,\n  useLayoutEffect,\n  useImperativeHandle,\n  forwardRef,\n} from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { chunk } from 'lodash';\nimport Cubie from './Cubie';\nimport animateRotation, { RotationAnimationStep } from './rotation';\nimport {\n  CubePosition,\n  CubeFaceletColour,\n  CubeState,\n  CUBIE_POSITIONS,\n  CUBE_FACELET_COLOURS,\n  CUBE_STATE_LOOKUP,\n} from '../constants';\n\ntype CubeProps = {\n  state: CubeState;\n} & JSX.IntrinsicElements['group'];\n\ntype CubeHandle = {\n  reset: () => void;\n  rotate: (move: string) => Promise<void>;\n};\n\nconst toCubieColours = (state: CubeState) =>\n  chunk(\n    [...state].reduce((faces: string[], face, idx) => {\n      faces[CUBE_STATE_LOOKUP[idx]] =\n        CUBE_FACELET_COLOURS[face as CubeFaceletColour];\n      return faces;\n    }, []),\n    3\n  );\n\nconst Cube = forwardRef<CubeHandle, CubeProps>(({ state }, ref) => {\n  const cubiesRef = useRef<THREE.Mesh[]>([]);\n  const rotationRef = useRef<\n    | [doStep: RotationAnimationStep, onCompletion: () => void]\n    | undefined\n  >();\n\n  const stateWithPadding: CubeState = state.padEnd(24, 'W');\n\n  useFrame(() => {\n    if (!rotationRef.current) return;\n\n    const [doStep, onCompletion] = rotationRef.current;\n\n    if (!doStep()) {\n      onCompletion();\n      rotationRef.current = undefined;\n    }\n  });\n\n  const rotate = (move: string) =>\n    new Promise<void>(resolve => {\n      rotationRef.current = [\n        animateRotation(cubiesRef.current, move, 1),\n        resolve,\n      ];\n    });\n\n  const reset = () => {\n    cubiesRef.current.forEach(cubie => {\n      cubie.position.copy(cubie.userData.position);\n      cubie.rotation.set(0, 0, 0);\n    });\n  };\n\n  useLayoutEffect(reset, [stateWithPadding]);\n\n  useImperativeHandle(ref, () => ({ reset, rotate }));\n\n  const cubieColours = toCubieColours(stateWithPadding);\n\n  return (\n    <group ref={ref}>\n      {Object.entries(CUBIE_POSITIONS).map(\n        ([name, position], idx) => {\n          const [yColour, xColour, zColour] = cubieColours[idx];\n\n          return (\n            <Cubie\n              key={name}\n              ref={el => (cubiesRef.current[idx] = el as THREE.Mesh)}\n              name={name as CubePosition}\n              position={position}\n              yColour={yColour}\n              xColour={xColour}\n              zColour={zColour}\n            />\n          );\n        }\n      )}\n    </group>\n  );\n});\n\nexport default Cube;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './new-1.1.3.css';\n\nimport('wasm-pocket-cube-solver').then(solver => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App solver={solver} />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n});\n"],"sourceRoot":""}