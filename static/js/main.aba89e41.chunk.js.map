{"version":3,"sources":["App/App.module.css","App/index.tsx","App/CameraControls.tsx","App/Actions.tsx","App/Solutions.tsx","Cube/Face.tsx","Cube/Cubie.tsx","Cube/animation.ts","Cube/index.tsx","index.tsx"],"names":["module","exports","SOLVED_CUBE","App","solver","cubeRef","useRef","useState","state","setState","solution","setSolution","solutionIdx","setSolutionIdx","isAutoPlay","setAutoPlay","useEffect","current","move","endState","isActiveAnimation","rotate","then","length","reset","onStateChange","onRandom","rand_cube","onSolve","solve_cube","Promise","resolve","map","idx","apply_cube_moves","slice","error","reject","doSolve","catch","global","alert","className","styles","Canvas","camera","position","gl","antialias","ref","onMoveSelection","startState","onAutoPlay","extend","OrbitControls","CameraControls","useThree","controls","useFrame","update","args","domElement","enableDamping","dampingFactor","enableZoom","enableKeys","enablePan","minDistance","maxDistance","Actions","size","type","value","match","join","onChange","e","target","toUpperCase","replace","onClick","Solutions","Solution","ActiveMove","Move","checked","eps","Face","width","height","radius","inverse","colour","shape","useMemo","radius0","Shape","absarc","Math","PI","createShape","rotY","rotX","Vector3","setX","setY","setZ","meshRef","geometryRef","React","useLayoutEffect","rotateX","rotateY","center","color","side","DoubleSide","polygonOffset","transparent","polygonOffsetFactor","polygonOffsetUnits","attach","RoundedBox","forwardRef","depth","smoothness","children","rest","params","bevelEnabled","bevelSegments","steps","bevelSize","bevelThickness","curveSegments","geomRef","Cubie","name","sideColour","topColour","frontColour","userData","x","y","z","ROTATIONS","F","positions","axis","B","R","L","U","D","animate","cubies","animationSpeed","split","action","extra","direction","quarterTurns","cubiesToRotate","filter","cubie","includes","targetRotation","remaining","step","stepFactor","theta","forEach","applyAxisAngle","rotateOnAxis","CUBIE_POSITIONS","DLB","DLF","ULB","ULF","DRB","DRF","URB","URF","STATE_LOOKUP","COLOURS","W","O","G","Y","Cube","cubiesRef","animationRef","stateWithPadding","padEnd","cubieColours","reduce","faces","face","animation","onCompletion","undefined","copy","rotation","set","useImperativeHandle","Object","entries","offset","top","front","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aba89e41.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Canvas\":\"App_Canvas__EMpWk\",\"Actions\":\"App_Actions__3Fldf\",\"Solution\":\"App_Solution__3p1us\",\"Move\":\"App_Move__y6vn9\",\"ActiveMove\":\"App_ActiveMove__21aOp\"};","import React, { useState, useRef, useEffect } from 'react';\nimport { Canvas } from '@react-three/fiber';\nimport CameraControls from './CameraControls';\nimport Actions from './Actions';\nimport Solutions from './Solutions';\nimport Cube from '../Cube';\nimport styles from './App.module.css';\n\nconst SOLVED_CUBE = 'WWWWOOOOGGGGRRRRYYYYBBBB';\nconst SOLVED_MOVE = '🎉';\n\ntype AppProps = {\n  solver: any;\n};\n\nexport type Solution = [\n  move: string,\n  startState: string,\n  endState: string\n][];\n\nconst doSolve = (solver: any, state: string): Promise<Solution> => {\n  try {\n    const solution = solver.solve_cube(state);\n\n    return Promise.resolve([\n      ...solution.map((move: string, idx: number) => [\n        move,\n        solver.apply_cube_moves(state, solution.slice(0, idx)),\n        solver.apply_cube_moves(state, solution.slice(0, idx + 1)),\n      ]),\n      [SOLVED_MOVE, SOLVED_CUBE, SOLVED_CUBE],\n    ]);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n};\n\nconst App = ({ solver }: AppProps) => {\n  const cubeRef = useRef<any>();\n  const [state, setState] = useState(SOLVED_CUBE);\n  const [solution, setSolution] = useState<Solution>([]);\n  const [solutionIdx, setSolutionIdx] = useState(0);\n  const [isAutoPlay, setAutoPlay] = useState(true);\n\n  useEffect(() => {\n    if (!cubeRef.current) return;\n    if (!solution[solutionIdx]) return;\n    if (!isAutoPlay) return;\n\n    const [move, , endState] = solution[solutionIdx];\n    if (move === SOLVED_MOVE) return;\n\n    let isActiveAnimation = true;\n\n    cubeRef.current.rotate(move).then(() => {\n      if (!isActiveAnimation) {\n        cubeRef.current.reset();\n        return;\n      }\n\n      setState(endState);\n\n      if (solutionIdx + 1 < solution.length) {\n        setSolutionIdx(solutionIdx + 1);\n      }\n    });\n\n    return () => {\n      isActiveAnimation = false;\n    };\n  }, [solution, solutionIdx, isAutoPlay]);\n\n  const handleRandom = () => {\n    setState(solver.rand_cube());\n    setSolution([]);\n    setSolutionIdx(0);\n  };\n\n  const handleSolve = () => {\n    doSolve(solver, state)\n      .then(solution => {\n        setSolution(solution);\n        setSolutionIdx(0);\n        setAutoPlay(true);\n      })\n      .catch(error => {\n        global.alert(error);\n      });\n  };\n\n  const handleMoveSelection = (idx: number) => {\n    const [, startState] = solution[idx];\n    setState(startState);\n    setSolutionIdx(idx);\n  };\n\n  return (\n    <div>\n      <header>\n        <h1>Pocket Cube Solver</h1>\n      </header>\n      <Actions\n        state={state}\n        onStateChange={setState}\n        onRandom={handleRandom}\n        onSolve={handleSolve}\n      />\n      <Canvas\n        className={styles.Canvas}\n        camera={{ position: [4, 4, 5] }}\n        gl={{ antialias: true }}\n      >\n        <CameraControls />\n        <Cube ref={cubeRef} state={state} />\n      </Canvas>\n      <Solutions\n        solution={solution}\n        solutionIdx={solutionIdx}\n        isAutoPlay={isAutoPlay}\n        onMoveSelection={handleMoveSelection}\n        onAutoPlay={setAutoPlay}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React, { useRef } from 'react';\nimport {\n  useFrame,\n  useThree,\n  extend,\n  ReactThreeFiber,\n} from '@react-three/fiber';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\n\nextend({ OrbitControls });\n\ndeclare global {\n  namespace JSX {\n    interface IntrinsicElements {\n      orbitControls: ReactThreeFiber.Object3DNode<\n        OrbitControls,\n        typeof OrbitControls\n      >;\n    }\n  }\n}\n\nconst CameraControls = () => {\n  const { camera, gl } = useThree();\n\n  const controls = useRef<OrbitControls>();\n  useFrame(() => controls.current?.update());\n\n  return (\n    <orbitControls\n      ref={controls}\n      args={[camera, gl.domElement]}\n      enableDamping={true}\n      dampingFactor={0.25}\n      enableZoom={true}\n      enableKeys={false}\n      enablePan={false}\n      minDistance={4}\n      maxDistance={4}\n    />\n  );\n};\n\nexport default CameraControls;\n","import React from 'react';\nimport styles from './App.module.css';\n\ntype ActionsProps = {\n  state: string;\n  onStateChange: (state: string) => void;\n  onRandom: () => void;\n  onSolve: () => void;\n};\n\nconst Actions = ({\n  state,\n  onStateChange,\n  onRandom,\n  onSolve,\n}: ActionsProps) => {\n  return (\n    <div className={styles.Actions}>\n      <input\n        size={40}\n        type=\"text\"\n        value={(state.match(/.{1,4}/g) || []).join(' ')}\n        onChange={e =>\n          onStateChange(\n            e.target.value.toUpperCase().replace(/[^WOGRYB]/g, '')\n          )\n        }\n      />\n      <button onClick={onRandom}>Random</button>\n      <button onClick={onSolve}>Solve</button>\n    </div>\n  );\n};\n\nexport default Actions;\n","import React from 'react';\nimport styles from './App.module.css';\nimport { Solution } from './index';\n\ntype SolutionsProps = {\n  solution: Solution;\n  solutionIdx: number;\n  isAutoPlay: boolean;\n  onMoveSelection: (idx: number) => void;\n  onAutoPlay: (enabled: boolean) => void;\n};\n\nconst Solutions = ({\n  solution,\n  solutionIdx,\n  isAutoPlay,\n  onMoveSelection,\n  onAutoPlay,\n}: SolutionsProps) => {\n  if (solution.length === 0) {\n    return null;\n  }\n\n  return (\n    <div className={styles.Solution}>\n      {solution.map(([move]: any, idx: number) => (\n        <span\n          key={idx}\n          className={\n            solutionIdx === idx ? styles.ActiveMove : styles.Move\n          }\n          onClick={() => onMoveSelection(idx)}\n        >\n          {move}\n        </span>\n      ))}\n      <label>\n        <input\n          type=\"checkbox\"\n          onChange={() => onAutoPlay(!isAutoPlay)}\n          checked={isAutoPlay}\n        />\n        Auto Play\n      </label>\n    </div>\n  );\n};\n\nexport default Solutions;\n","import React, { useMemo, useRef } from 'react';\nimport { Shape, DoubleSide, Vector3 } from 'three';\n\nconst eps = 0.00001;\n\nconst createShape = (\n  width: number,\n  height: number,\n  radius0: number\n): Shape => {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(\n    eps,\n    height - radius * 2,\n    eps,\n    Math.PI,\n    Math.PI / 2,\n    true\n  );\n  shape.absarc(\n    width - radius * 2,\n    height - radius * 2,\n    eps,\n    Math.PI / 2,\n    0,\n    true\n  );\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n\n  return shape;\n};\n\ntype FaceProps = {\n  width?: number;\n  height?: number;\n  radius?: number;\n  type: 'side' | 'top' | 'front';\n  colour: string;\n  inverse: boolean;\n};\n\nconst Face = ({\n  width = 0.88,\n  height = 0.88,\n  radius = 0,\n  type,\n  inverse,\n  colour,\n}: FaceProps) => {\n  const shape = useMemo(() => createShape(width, height, radius), [\n    width,\n    height,\n    radius,\n  ]);\n\n  let rotY = 0;\n  let rotX = 0;\n  const position = new Vector3(0, 0, 0);\n\n  switch (type) {\n    case 'side':\n      rotY = (inverse ? -1 : 1) * (Math.PI / 2);\n      position.setX(inverse ? -0.5 : 0.5);\n      break;\n    case 'top':\n      rotX = (inverse ? 1 : -1) * (Math.PI / 2);\n      position.setY(inverse ? -0.5 : 0.5);\n      break;\n    case 'front':\n      rotY = Math.PI;\n      position.setZ(inverse ? -0.5 : 0.5);\n      break;\n  }\n\n  const meshRef = useRef<THREE.Mesh>();\n  const geometryRef = useRef<THREE.ShapeBufferGeometry>();\n\n  React.useLayoutEffect(() => {\n    meshRef.current?.rotateX(rotX);\n    meshRef.current?.rotateY(rotY);\n    geometryRef.current?.center();\n  }, [rotY, rotX]);\n\n  return (\n    <mesh ref={meshRef} position={position}>\n      <meshBasicMaterial\n        color={colour}\n        side={DoubleSide}\n        polygonOffset\n        transparent\n        polygonOffsetFactor={-1}\n        polygonOffsetUnits={-4}\n      />\n      <shapeBufferGeometry\n        ref={geometryRef}\n        attach=\"geometry\"\n        args={[shape, 5]}\n      />\n    </mesh>\n  );\n};\n\nexport default Face;\n","import React, { forwardRef } from 'react';\nimport { Shape, ExtrudeBufferGeometry, Mesh, Vector3 } from 'three';\nimport Face from './Face';\n\nconst eps = 0.00001;\n\nconst createShape = (\n  width: number,\n  height: number,\n  radius0: number\n) => {\n  const shape = new Shape();\n  const radius = radius0 - eps;\n\n  shape.absarc(eps, eps, eps, -Math.PI / 2, -Math.PI, true);\n  shape.absarc(\n    eps,\n    height - radius * 2,\n    eps,\n    Math.PI,\n    Math.PI / 2,\n    true\n  );\n  shape.absarc(\n    width - radius * 2,\n    height - radius * 2,\n    eps,\n    Math.PI / 2,\n    0,\n    true\n  );\n  shape.absarc(width - radius * 2, eps, eps, 0, -Math.PI / 2, true);\n\n  return shape;\n};\n\ntype RoundBoxProps = {\n  args?: [width?: number, height?: number, depth?: number];\n  radius?: number;\n  smoothness?: number;\n} & Omit<JSX.IntrinsicElements['mesh'], 'args'>;\n\nconst RoundedBox = forwardRef<Mesh, RoundBoxProps>(\n  function RoundedBox(\n    {\n      args: [width = 1, height = 1, depth = 1] = [],\n      radius = 0.05,\n      smoothness = 4,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    const shape = React.useMemo(\n      () => createShape(width, height, radius),\n      [width, height, radius]\n    );\n    const params = React.useMemo(\n      () => ({\n        depth: depth - radius * 2,\n        bevelEnabled: true,\n        bevelSegments: smoothness * 2,\n        steps: 1,\n        bevelSize: radius - eps,\n        bevelThickness: radius,\n        curveSegments: smoothness,\n      }),\n      [depth, radius, smoothness]\n    );\n    const geomRef = React.useRef<ExtrudeBufferGeometry>();\n\n    React.useLayoutEffect(() => {\n      if (geomRef.current) {\n        geomRef.current.center();\n      }\n    }, [shape, params]);\n\n    return (\n      <mesh ref={ref} {...rest}>\n        <extrudeBufferGeometry\n          attach=\"geometry\"\n          ref={geomRef}\n          args={[shape, params]}\n        />\n        {children}\n      </mesh>\n    );\n  }\n);\n\ntype CubieProps = {\n  name: string;\n  position: Vector3;\n  sideColour: string;\n  topColour: string;\n  frontColour: string;\n};\n\nconst Cubie = forwardRef<Mesh, CubieProps>(\n  ({ name, position, sideColour, topColour, frontColour }, ref) => {\n    return (\n      <RoundedBox\n        ref={ref}\n        args={[1, 1, 1]}\n        radius={0.08}\n        smoothness={5}\n        position={position}\n        userData={{ name, position }}\n      >\n        <meshBasicMaterial color={0x000000} />\n        <Face\n          type=\"side\"\n          inverse={position.x < 0}\n          colour={sideColour}\n        />\n        <Face\n          type=\"top\"\n          inverse={position.y < 0}\n          colour={topColour}\n        />\n        <Face\n          type=\"front\"\n          inverse={position.z < 0}\n          colour={frontColour}\n        />\n      </RoundedBox>\n    );\n  }\n);\n\nexport default Cubie;\n","import { Vector3 } from 'three';\n\n// prettier-ignore\nconst ROTATIONS = {\n  F: { positions: ['ULF', 'URF', 'DLF', 'DRF'], axis: new Vector3(0, 0, 1) },\n  B: { positions: ['URB', 'ULB', 'DRB', 'DLB'], axis: new Vector3(0, 0, 1) },\n  R: { positions: ['URF', 'URB', 'DRF', 'DRB'], axis: new Vector3(1, 0, 0) },\n  L: { positions: ['ULB', 'ULF', 'DLB', 'DLF'], axis: new Vector3(1, 0, 0) },\n  U: { positions: ['ULB', 'URB', 'ULF', 'URF'], axis: new Vector3(0, 1, 0) },\n  D: { positions: ['DLF', 'DRF', 'DLB', 'DRB'], axis: new Vector3(0, 1, 0) },\n};\n\ntype Rotation = keyof typeof ROTATIONS;\n\nexport type Animation = {\n  step: () => boolean;\n};\n\nconst animate = (\n  cubies: any[],\n  move: string,\n  animationSpeed: number\n): Animation => {\n  const [action, extra] = move.split('', 2) as [\n    Rotation,\n    \"'\" | '2' | undefined\n  ];\n  const { positions, axis } = ROTATIONS[action];\n  const direction = extra === \"'\" ? 1 : -1;\n  const quarterTurns = extra === '2' ? 2 : 1;\n  const cubiesToRotate = cubies.filter(cubie =>\n    positions.includes(cubie.userData.name)\n  );\n  const targetRotation = (quarterTurns * Math.PI) / 2;\n  let remaining = targetRotation;\n\n  return {\n    step() {\n      if (remaining <= 0) {\n        return false;\n      }\n\n      const stepFactor = 0.05 * quarterTurns * animationSpeed;\n      const theta =\n        (1.1 -\n          ((2 * remaining - targetRotation) / targetRotation) ** 2) *\n        stepFactor;\n      remaining -= theta;\n\n      cubiesToRotate.forEach(cubie => {\n        cubie.position.applyAxisAngle(axis, theta * direction);\n        cubie.rotateOnAxis(axis, theta * direction);\n      });\n\n      return true;\n    },\n  };\n};\n\nexport default animate;\n","import React, {\n  useRef,\n  useLayoutEffect,\n  useImperativeHandle,\n  forwardRef,\n} from 'react';\nimport { useFrame } from '@react-three/fiber';\nimport { Vector3 } from 'three';\nimport Cubie from './Cubie';\nimport animate, { Animation } from './animation';\n\nconst FACE_SIDES = 3;\n\nconst CUBIE_POSITIONS = {\n  DLB: new Vector3(-0.5, -0.5, -0.5),\n  DLF: new Vector3(-0.5, -0.5, 0.5),\n  ULB: new Vector3(-0.5, 0.5, -0.5),\n  ULF: new Vector3(-0.5, 0.5, 0.5),\n  DRB: new Vector3(0.5, -0.5, -0.5),\n  DRF: new Vector3(0.5, -0.5, 0.5),\n  URB: new Vector3(0.5, 0.5, -0.5),\n  URF: new Vector3(0.5, 0.5, 0.5),\n};\n\n// prettier-ignore\nconst STATE_LOOKUP = [\n  7, 19, 22, 10, 6, 9, 3, 0, 11, 23, 17, 5,\n  21, 18, 12, 15, 4, 16, 13, 1, 20, 8, 2, 14\n];\n\nconst COLOURS = {\n  W: 'white',\n  O: 'orange',\n  G: 'green',\n  R: 'red',\n  Y: 'yellow',\n  B: 'blue',\n};\n\ntype CubeProps = {\n  state: string;\n};\n\nconst Cube = forwardRef<THREE.Group, CubeProps>(({ state }, ref) => {\n  const cubiesRef = useRef<THREE.Mesh[]>([]);\n  const animationRef = useRef<[Animation, () => void]>();\n\n  const stateWithPadding = state.padEnd(24, 'W');\n  const cubieColours = stateWithPadding\n    .split('')\n    .reduce((faces, face, idx) => {\n      // @ts-ignore\n      faces[STATE_LOOKUP[idx]] = COLOURS[face];\n      return faces;\n    }, []);\n\n  useFrame(() => {\n    if (!animationRef.current) return;\n\n    const [animation, onCompletion] = animationRef.current;\n\n    if (!animation.step()) {\n      onCompletion();\n      animationRef.current = undefined;\n    }\n  });\n\n  const rotate = (move: string) =>\n    new Promise<void>(resolve => {\n      animationRef.current = [\n        animate(cubiesRef.current, move, 1),\n        resolve,\n      ];\n    });\n\n  const reset = () => {\n    cubiesRef.current.forEach(cubie => {\n      cubie.position.copy(cubie.userData.position);\n      cubie.rotation.set(0, 0, 0);\n    });\n  };\n\n  useLayoutEffect(reset, [stateWithPadding]);\n\n  // @ts-ignore\n  useImperativeHandle(ref, () => ({ reset, rotate }));\n\n  return (\n    <group ref={ref}>\n      {Object.entries(CUBIE_POSITIONS).map(\n        ([name, position], idx) => {\n          const offset = idx * FACE_SIDES;\n          const [side, top, front] = cubieColours.slice(\n            offset,\n            offset + FACE_SIDES\n          );\n\n          return (\n            <Cubie\n              key={name}\n              // @ts-ignore\n              ref={el => (cubiesRef.current[idx] = el)}\n              name={name}\n              position={position}\n              sideColour={side}\n              topColour={top}\n              frontColour={front}\n            />\n          );\n        }\n      )}\n    </group>\n  );\n});\n\nexport default Cube;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './new-1.1.3.css';\n\nimport('wasm-pocket-cube-solver').then(solver => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App solver={solver} />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n});\n"],"sourceRoot":""}